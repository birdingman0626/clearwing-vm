import org.gradle.nativeplatform.platform.internal.DefaultNativePlatform

plugins {
    id 'java'
}

sourceCompatibility = 17
targetCompatibility = 17

group 'com.thelogicmaster'
version '1.0'

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

configurations {
    transpiler {
        transitive = false
    }
}

dependencies {
    transpiler 'com.thelogicmaster.clearwing-vm:transpiler:3.0.0-dev'
    implementation 'com.thelogicmaster.clearwing-vm:annotations:3.0.0-dev'
}

task transpile(dependsOn: 'build') {
    doLast {
        delete "$buildDir/dist"

        javaexec {
            main = "-jar"
            args = [
                    "$configurations.transpiler.singleFile.absolutePath",
                    "--input", "$buildDir/classes",
                    "--output", "$buildDir/dist",
                    "--source", "$projectDir/src/main/java",
                    "--config", "$projectDir/config.json",
                    "--main", "com.thelogicmaster.example.Example",
                    "--project", "true"
            ]
        }

        copy {
            from sourceSets.main.resources
            into "$buildDir/dist"
        }

        exec {
            if (DefaultNativePlatform.currentOperatingSystem.isWindows())
                commandLine 'cmd', '/c', "rsync -crh --delete --checksum --exclude '/cmake-build-*' --exclude '/data' --exclude '/.idea' dist/ ${project.name}"
            else
                commandLine 'bash', '-c', "rsync -crh --delete --checksum --exclude '/cmake-build-*' --exclude '/data' --exclude '/.idea' dist/ ${project.name}"
            workingDir "$buildDir"
        }
    }
}

task run(dependsOn: transpile) {
    doLast {
        exec {
            if (DefaultNativePlatform.currentOperatingSystem.isWindows()) // Todo: Use non-devKitPro msys2 here
                commandLine 'C:\\devkitPro\\msys2\\msys2_shell.cmd', '-mingw64', '-where', "$buildDir${File.separator}${project.name}", '-c',
                        'cmake -DCMAKE_BUILD_TYPE=Debug -S . -B cmake-build-run -G \'MinGW Makefiles\' && cmake --build cmake-build-run -j8 || sleep 50000'
            else
                commandLine 'bash', '-c', 'cmake -DCMAKE_BUILD_TYPE=Debug -S . -B cmake-build-run -G Ninja && cmake --build cmake-build-run -j8'
            workingDir "$buildDir${File.separator}${project.name}"
        }
        if (DefaultNativePlatform.currentOperatingSystem.isWindows()) {
            copy { // Todo: Copy only needed
                from "C:\\devkitPro\\msys2\\mingw64\\bin"
                include "*.dll"
                into "$buildDir\\${project.name}\\cmake-build-run"
            }
        }
        exec {
            if (DefaultNativePlatform.currentOperatingSystem.isWindows())
                commandLine 'cmd', '/c', 'cmake-build-run\\dist.exe'
            else
                commandLine 'bash', '-c', './cmake-build-run/dist'
            workingDir "$buildDir${File.separator}${project.name}"
        }
    }
}
